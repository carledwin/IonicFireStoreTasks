{"version":3,"sources":["./src/app/core/classes/firestore.class.ts","./src/app/core/services/overlay.service.ts","./src/app/shared/components/logout-button/logout-button.component.ts","./src/app/shared/components/menu-toggle/menu-toggle.component.ts","./src/app/shared/shared.module.ts","./src/app/tasks/services/tasks.service.ts"],"names":[],"mappings":"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","file":"default~pages-task-list-task-list-module~pages-task-save-task-save-module-es5.js","sourcesContent":["import { AngularFirestore, AngularFirestoreCollection, QueryFn } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\nexport abstract class Firestore<T extends {id: string}> {\n\n    protected angularFirestoreCollection: AngularFirestoreCollection<T>;\n\n    constructor(protected angularFirestoreDB: AngularFirestore){}\n\n    protected setCollection(path: string, queryFn?: QueryFn): void {\n\n        this.angularFirestoreCollection = path ? this.angularFirestoreDB.collection(path, queryFn) : null;\n    }\n\n    getAll(): Observable<T[]> {\n\n        return this.angularFirestoreCollection.valueChanges();\n    }\n\n    get(id: string) {\n\n        return this.angularFirestoreCollection.doc<T>(id).valueChanges();\n    }\n\n    private setItem(item: T, operation: 'set' | 'update'): Promise<T> {\n\n        return this.angularFirestoreCollection\n        .doc<T>(item.id)\n        [operation](item)\n        .then(() => item);\n    }\n\n    create(item: T): Promise<T> {\n\n        item.id = this.angularFirestoreDB.createId();\n\n        return this.setItem(item, 'set');\n    }\n\n    update(item: T): Promise<T> {\n\n        return this.setItem(item, 'update');\n    }\n\n    delete(item: T): Promise<void> {\n\n        return this.angularFirestoreCollection.doc<T>(item.id).delete();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController, LoadingController, AlertController } from '@ionic/angular';\nimport { LoadingOptions, AlertOptions, ToastOptions } from '@ionic/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OverlayService {\n\n  constructor(private alertCtrl: AlertController, \n              private loadingCtrl: LoadingController, \n              private toastCtrl: ToastController) { }\n\n  async alert(alertOptions?: AlertOptions ): Promise<HTMLIonAlertElement>{\n\n    const alert = await this.alertCtrl.create(alertOptions);\n\n    await alert.present();\n\n    return alert;\n  }\n\n  async loading(loadingOptions?: LoadingOptions): Promise<HTMLIonLoadingElement>{\n\n    const loading = await this.loadingCtrl.create({\n\n      message: 'Loading....',\n      ...loadingOptions\n    });\n\n    await loading.present();\n\n    return loading;\n  }\n\n  async toast(toastOptions?: ToastOptions): Promise<HTMLIonToastElement>{\n\n    const toast = await this.toastCtrl.create({\n\n      position: 'bottom',\n      duration: 7000,\n      showCloseButton: true,\n      closeButtonText: 'OK',\n      ...toastOptions\n    });\n\n    await toast.present();\n\n    return toast;\n  }\n}\n","import { MenuController, NavController } from '@ionic/angular';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { OverlayService } from './../../../core/services/overlay.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-logout-button',\n  template: `\n    <ion-buttons>\n      <ion-button (click)=\"logout()\">\n        <ion-icon name=\"exit\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  `,\n})\nexport class LogoutButtonComponent implements OnInit {\n\n@Input() menuId: string;\n\n  constructor(private authService: AuthService,\n              private menuCtrl: MenuController,\n              private navCtrl: NavController,\n              private overlayService: OverlayService) { }\n\n  async ngOnInit(): Promise<void> {\n\n    if(!(await this.menuCtrl.isEnabled(this.menuId))){\n      \n      this.menuCtrl.enable(true, this.menuId);\n    }\n  }\n\n  async logout(): Promise<void> {\n\n    await this.overlayService.alert({\n\n      message: 'Do you really want to quit?', \n      buttons:[\n        {\n          text: 'Yes',\n          handler: async () =>  {\n\n            await this.authService.logout();\n\n            await this.menuCtrl.enable(false, this.menuId);\n\n            this.navCtrl.navigateRoot('/login');\n          }\n        },\n        'No'\n      ] \n    });\n  }\n\n}\n","import { Component,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-toggle',\n  //templateUrl: './menu-toggle.component.html',\n  //styleUrls: ['./menu-toggle.component.scss'],\n  template: `\n  <ion-buttons>\n      <ion-menu-toggle [menu]=\"menu\">\n        <ion-button>\n          <ion-icon slot=\"icon-only\" name=\"menu\"></ion-icon>\n        </ion-button>\n      </ion-menu-toggle>\n    </ion-buttons>\n  `,\n})\nexport class MenuToggleComponent {\n\n  //inputProperty\n  @Input() menu: string;\n}\n","import { MenuToggleComponent } from './components/menu-toggle/menu-toggle.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { LogoutButtonComponent } from './components/logout-button/logout-button.component';\n\n@NgModule({\n  declarations: [LogoutButtonComponent, MenuToggleComponent],\n  imports: [IonicModule],\n  exports: [CommonModule, ReactiveFormsModule, IonicModule, CommonModule, LogoutButtonComponent, MenuToggleComponent]\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport { Firestore } from 'src/app/core/classes/firestore.class';\nimport { Task } from '../models/task.model';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\nimport { firestore } from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService extends Firestore<Task> {\n\n  constructor(private authService: AuthService, angularFirestoreDB: AngularFirestore) {\n\n    super(angularFirestoreDB);\n\n    this.init();\n   }\n\n   private init(): void{\n\n    this.authService.authState$.subscribe(user => {\n\n      if(user) {\n\n        this.setCollection(`/users/${user.uid}/tasks`, \n        (ref: firestore.CollectionReference) => {\n\n          return ref\n                    .orderBy('done', 'asc')\n                    .orderBy('title', 'asc');\n        });\n\n        console.log('uid user >> ', user.uid);\n        return;\n      }\n\n      this.setCollection(null);\n    });\n   }\n}\n"],"sourceRoot":""}