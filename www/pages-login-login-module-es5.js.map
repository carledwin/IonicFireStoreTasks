{"version":3,"sources":["./src/app/auth/pages/login/login.page.html","./src/app/auth/pages/login/login.module.ts","./src/app/auth/pages/login/login.page.scss","./src/app/auth/pages/login/login.page.ts","./src/app/core/services/overlay.service.ts","./src/app/shared/components/logout-button/logout-button.component.ts","./src/app/shared/components/menu-toggle/menu-toggle.component.ts","./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["module.exports = \"<ion-content padding>\\n  <ion-grid>\\n    <ion-row justify-content-center>\\n      <ion-col size-xs=\\\"12\\\" size-sm=\\\"8\\\" size-md=\\\"4\\\" size-lg=\\\"3\\\" size-xl=\\\"3\\\">\\n        <h1 text-center>\\n          <ion-icon\\n            name=\\\"done-all\\\"\\n            color=\\\"primary\\\"\\n            class=\\\"icon-7em \\\"\\n          ></ion-icon>\\n        </h1>\\n        <form\\n          [formGroup]=\\\"authForm\\\"\\n          (submit)=\\\"onSubmit(authProviders.Email)\\\"\\n        >\\n      \\n        <ng-container *ngIf=\\\"!configs.isSiginIn\\\">\\n      \\n            <ion-item>\\n                <ion-icon\\n                  name=\\\"person\\\"\\n                  color=\\\"primary\\\"\\n                  slot=\\\"start\\\"\\n                ></ion-icon>\\n                <ion-input\\n                  formControlName=\\\"name\\\"\\n                  type=\\\"text\\\"\\n                  placeholder=\\\"Name\\\"\\n                ></ion-input>\\n                <ion-note\\n                  slot=\\\"end\\\"\\n                  color=\\\"danger\\\"\\n                  *ngIf=\\\"name.dirty && name.hasError('required')\\\"\\n                >\\n                  Required\\n                </ion-note>\\n                <ion-note\\n                  slot=\\\"end\\\"\\n                  color=\\\"danger\\\"\\n                  *ngIf=\\\"name.dirty && name.hasError('minlength')\\\"\\n                >\\n                  Invalid min size(6) name\\n                </ion-note>\\n                <ion-note\\n                  slot=\\\"end\\\"\\n                  color=\\\"danger\\\"\\n                  *ngIf=\\\"name.dirty && name.hasError('maxlength')\\\"\\n                >\\n                  Invalid max size(30) name\\n                </ion-note>\\n              </ion-item>\\n      \\n        </ng-container>\\n          \\n        <ion-item>\\n            <ion-icon\\n              name=\\\"mail\\\"\\n              color=\\\"primary\\\"\\n              slot=\\\"start\\\"\\n            ></ion-icon>\\n            <ion-input\\n              formControlName=\\\"email\\\"\\n              type=\\\"email\\\"\\n              placeholder=\\\"email@email.com\\\"\\n              inputmode=\\\"email\\\"\\n              autofocus=\\\"true\\\"\\n            ></ion-input>\\n            <ion-note\\n              slot=\\\"end\\\"\\n              color=\\\"danger\\\"\\n              *ngIf=\\\"email.dirty && email.hasError('required')\\\"\\n            >\\n              Required\\n            </ion-note>\\n            <ion-note\\n              slot=\\\"end\\\"\\n              color=\\\"danger\\\"\\n              *ngIf=\\\"email.dirty && email.hasError('email')\\\"\\n            >\\n              Invalid email\\n            </ion-note>\\n          </ion-item>\\n      \\n          <ion-item>\\n            <ion-icon\\n              name=\\\"lock\\\"\\n              color=\\\"primary\\\"\\n              slot=\\\"start\\\"\\n            ></ion-icon>\\n            <ion-input\\n              formControlName=\\\"password\\\"\\n              type=\\\"password\\\"\\n              placeholder=\\\"re@sdsd12A\\\"\\n            ></ion-input>\\n            <ion-note\\n              slot=\\\"end\\\"\\n              color=\\\"danger\\\"\\n              *ngIf=\\\"password.dirty && password.hasError('required')\\\"\\n            >\\n              Required\\n            </ion-note>\\n            <ion-note\\n              slot=\\\"end\\\"\\n              color=\\\"danger\\\"\\n              *ngIf=\\\"password.dirty && password.hasError('minlength')\\\"\\n            >\\n              Invalid min size(6) password\\n            </ion-note>\\n            <ion-note\\n              slot=\\\"end\\\"\\n              color=\\\"danger\\\"\\n              *ngIf=\\\"password.dirty && password.hasError('maxlength')\\\"\\n            >\\n              Invalid max size(10) password\\n            </ion-note>\\n          </ion-item>\\n      \\n          <ion-button\\n            expand=\\\"block\\\"\\n            type=\\\"submit\\\"\\n            [disabled]=\\\"authForm.invalid\\\"\\n          >\\n            {{ configs.action }}\\n          </ion-button>\\n        </form>\\n      \\n        <ion-button\\n          expand=\\\"block\\\"\\n          fill=\\\"clear\\\"\\n          (click)=\\\"changeAuthAction()\\\"\\n        >\\n          {{ configs.actionChange }}\\n        </ion-button>\\n        <ion-button expand=\\\"full\\\" (click)=\\\"onSubmit(authProviders.Facebook)\\\">\\n          <ion-icon\\n            name=\\\"logo-facebook\\\"\\n            slot=\\\"start\\\"\\n          ></ion-icon>\\n          Login with Facebook\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(routes)],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { AuthService } from './../../../core/services/auth.service';\nimport { AuthProvider } from './../../../core/services/auth.types';\nimport { OverlayService } from './../../../core/services/overlay.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss']\n})\nexport class LoginPage implements OnInit {\n  \n  authForm: FormGroup;\n\n  authProviders = AuthProvider;\n\n  configs = { isSiginIn: true, action: 'Login', actionChange: 'Create account' };\n\n  private nameControl = new FormControl(' ', [Validators.required, Validators.minLength(3)]);\n\n  constructor(private authService: AuthService, \n              private navCtrl: NavController,\n              private activatedRoute: ActivatedRoute,\n              private formBuilder: FormBuilder,\n              private overlayService: OverlayService) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.authForm = this.formBuilder.group({\n      email: [' ', [Validators.required, Validators.email]],\n      password: [' ', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]],\n      //name: [' ', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]]\n    });\n  }\n\n  get name(): FormControl {\n    return <FormControl>this.authForm.get('name');\n  }\n\n  get email(): FormControl {\n    return <FormControl>this.authForm.get('email');\n  }\n\n  get password(): FormControl {\n    return <FormControl>this.authForm.get('password');\n  }\n\n  async onSubmit(provider: AuthProvider): Promise<void> {\n    \n    const loading = await this.overlayService.loading();\n\n    try{\n\n      const credentials = await this.authService.orchestrator({\n        \n        isSignIn: this.configs.isSiginIn,\n        user: this.authForm.value,\n        provider\n      });\n\n      console.log('AuthForm: ', this.authForm.value);\n\n      console.log('Redirecting....');\n\n      this.navCtrl.navigateForward(this.activatedRoute.snapshot.queryParamMap.get('redirect') || '/tasks');\n\n    }catch(error){\n      \n      console.error('Auth error: ', error);\n\n      await this.overlayService.toast({\n        message: error.message\n      });\n\n    }finally{\n\n      loading.dismiss();\n    }\n\n  }\n\n  changeAuthAction(): void {\n\n    this.configs.isSiginIn = !this.configs.isSiginIn;\n    \n    const { isSiginIn } = this.configs;\n    \n    this.configs.action = isSiginIn ? 'Login' : 'Sign Up';\n    \n    this.configs.actionChange = isSiginIn ? 'Create account' : 'Already have an account';\n\n    !isSiginIn\n      ? this.authForm.addControl('name', this.nameControl)\n      : this.authForm.removeControl('name');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController, LoadingController, AlertController } from '@ionic/angular';\nimport { LoadingOptions, AlertOptions, ToastOptions } from '@ionic/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OverlayService {\n\n  constructor(private alertCtrl: AlertController, \n              private loadingCtrl: LoadingController, \n              private toastCtrl: ToastController) { }\n\n  async alert(alertOptions?: AlertOptions ): Promise<HTMLIonAlertElement>{\n\n    const alert = await this.alertCtrl.create(alertOptions);\n\n    await alert.present();\n\n    return alert;\n  }\n\n  async loading(loadingOptions?: LoadingOptions): Promise<HTMLIonLoadingElement>{\n\n    const loading = await this.loadingCtrl.create({\n\n      message: 'Loading....',\n      ...loadingOptions\n    });\n\n    await loading.present();\n\n    return loading;\n  }\n\n  async toast(toastOptions?: ToastOptions): Promise<HTMLIonToastElement>{\n\n    const toast = await this.toastCtrl.create({\n\n      position: 'bottom',\n      duration: 7000,\n      showCloseButton: true,\n      closeButtonText: 'OK',\n      ...toastOptions\n    });\n\n    await toast.present();\n\n    return toast;\n  }\n}\n","import { MenuController, NavController } from '@ionic/angular';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { OverlayService } from './../../../core/services/overlay.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-logout-button',\n  template: `\n    <ion-buttons>\n      <ion-button (click)=\"logout()\">\n        <ion-icon name=\"exit\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  `,\n})\nexport class LogoutButtonComponent implements OnInit {\n\n@Input() menuId: string;\n\n  constructor(private authService: AuthService,\n              private menuCtrl: MenuController,\n              private navCtrl: NavController,\n              private overlayService: OverlayService) { }\n\n  async ngOnInit(): Promise<void> {\n\n    if(!(await this.menuCtrl.isEnabled(this.menuId))){\n      \n      this.menuCtrl.enable(true, this.menuId);\n    }\n  }\n\n  async logout(): Promise<void> {\n\n    await this.overlayService.alert({\n\n      message: 'Do you really want to quit?', \n      buttons:[\n        {\n          text: 'Yes',\n          handler: async () =>  {\n\n            await this.authService.logout();\n\n            await this.menuCtrl.enable(false, this.menuId);\n\n            this.navCtrl.navigateRoot('/login');\n          }\n        },\n        'No'\n      ] \n    });\n  }\n\n}\n","import { Component,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-toggle',\n  //templateUrl: './menu-toggle.component.html',\n  //styleUrls: ['./menu-toggle.component.scss'],\n  template: `\n  <ion-buttons>\n      <ion-menu-toggle [menu]=\"menu\">\n        <ion-button>\n          <ion-icon slot=\"icon-only\" name=\"menu\"></ion-icon>\n        </ion-button>\n      </ion-menu-toggle>\n    </ion-buttons>\n  `,\n})\nexport class MenuToggleComponent {\n\n  //inputProperty\n  @Input() menu: string;\n}\n","import { MenuToggleComponent } from './components/menu-toggle/menu-toggle.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { LogoutButtonComponent } from './components/logout-button/logout-button.component';\n\n@NgModule({\n  declarations: [LogoutButtonComponent, MenuToggleComponent],\n  imports: [IonicModule],\n  exports: [CommonModule, ReactiveFormsModule, IonicModule, CommonModule, LogoutButtonComponent, MenuToggleComponent]\n})\nexport class SharedModule {}\n"],"sourceRoot":""}