{"version":3,"sources":["./src/app/tasks/pages/task-save/task-save.page.html","./src/app/tasks/pages/task-save/task-save.module.ts","./src/app/tasks/pages/task-save/task-save.page.scss","./src/app/tasks/pages/task-save/task-save.page.ts"],"names":[],"mappings":"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","file":"pages-task-save-task-save-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tasks\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ pageTitle }}</ion-title>\\n    <app-logout-button slot=\\\"end\\\" menu=\\\"main-menu-id\\\"></app-logout-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <form [formGroup]=\\\"taskFormGroup\\\" (submit)=\\\"onSubmit()\\\">\\n    <ion-item>\\n      <ion-icon name=\\\"paper\\\" slot=\\\"start\\\" color=\\\" primary\\\"></ion-icon>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Title\\\" autofocus=\\\"true\\\" inputmode=\\\"text\\\"\\n      formControlName=\\\"title\\\"></ion-input>\\n      <ion-toggle *ngIf=\\\"taskId\\\" slot=\\\"end\\\" color=\\\"primary\\\" formControlName=\\\"done\\\"></ion-toggle>\\n    </ion-item>\\n    <ion-button expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"taskFormGroup.invalid\\\">Save</ion-button>\\n  </form>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskSavePage } from './task-save.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskSavePage\n  }\n];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TaskSavePage]\n})\nexport class TaskSavePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2tzL3BhZ2VzL3Rhc2stc2F2ZS90YXNrLXNhdmUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { OverlayService } from './../../../core/services/overlay.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { NavController } from '@ionic/angular';\nimport { TasksService } from './../../services/tasks.service';\n\n@Component({\n  selector: 'app-task-save',\n  templateUrl: './task-save.page.html',\n  styleUrls: ['./task-save.page.scss'],\n})\nexport class TaskSavePage implements OnInit {\n\n  taskFormGroup: FormGroup;\n\n  pageTitle = '...';\n\n  taskId = undefined;\n\n  constructor(private formBuilder: FormBuilder,\n     private navCtrl: NavController,\n     private overlayService: OverlayService,\n     private activatedRoute: ActivatedRoute, //rota atual\n     private tasksService: TasksService) { }\n\n  ngOnInit(): void {\n  \n    this.createForm();\n    this.init();\n  }\n\n  private init(): void{\n\n    const taskId = this.activatedRoute.snapshot.paramMap.get('id');\n\n    if(!taskId){\n\n      this.pageTitle = 'Create Task';\n      console.log('Eh criacao');\n      return;\n    }\n\n    console.log('Eh edicao');\n    this.taskId = taskId;\n\n    console.log('TaskId: ', this.taskId);\n\n    this.pageTitle = 'Edit Task';\n\n    this.tasksService\n    .get(taskId)\n    .pipe(take(1))\n    .subscribe(({title, done}) => {\n\n      this.taskFormGroup.get('title').setValue(title);\n      this.taskFormGroup.get('done').setValue(done);\n\n      console.log('Encontrou a task');\n    });\n  }\n\n  private createForm(): void{\n\n    this.taskFormGroup = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.minLength(3)]],\n      done: [false]\n    });\n  }\n\n  async onSubmit(): Promise<void> {\n\n    const loading = await this.overlayService.loading({message: 'Saving ....'});\n\n    console.log('Task In: ', this.taskFormGroup.value);\n\n    try {\n\n      const task = !this.taskId \n      ? await this.tasksService.create(this.taskFormGroup.value)\n      : await this.tasksService.update({id: this.taskId, ...this.taskFormGroup.value});\n\n      console.log('Task saved! ', task);\n\n      this.navCtrl.navigateBack('/tasks');\n    } catch (error) {\n\n      console.error('Error saving Task, ', error);\n\n      await this.overlayService.toast({message: error.message});\n    } finally {\n\n      loading.dismiss();\n    }\n  }\n}\n"],"sourceRoot":""}